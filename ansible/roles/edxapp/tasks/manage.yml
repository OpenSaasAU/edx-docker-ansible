  # call supervisorctl update. this reloads
  # the supervisorctl config and restarts
  # the services if any of the configurations
  # have changed.

- name: update supervisor configuration
  shell:  "{{ supervisor_ctl }} -c {{ supervisor_cfg }} update"
  register: supervisor_update
  become_user: "{{ supervisor_service_user }}"
  changed_when: supervisor_update.stdout is defined and supervisor_update.stdout != ""
  when: not disable_edx_services
  tags:
    - manage

- name: ensure edxapp has started
  supervisorctl:
    name: "edxapp:"
    supervisorctl_path: "{{ supervisor_ctl }}"
    config: "{{ supervisor_cfg }}"
    state: started
  become_user: "{{ supervisor_service_user }}"
  when: celery_worker is not defined and not disable_edx_services
  tags:
    - manage

- name: ensure edxapp_workers has started
  supervisorctl:
    name: "edxapp_worker:"
    supervisorctl_path: "{{ supervisor_ctl }}"
    config: "{{ supervisor_cfg }}"
    state: started
  when: celery_worker is defined and not disable_edx_services
  become_user: "{{ supervisor_service_user }}"
  tags:
    - manage

- name: create symlinks from the venv bin dir and repo dir
  file:
    src: "{{ item }}"
    dest: "{{ COMMON_BIN_DIR }}/{{ (item | basename).split('.', 1) | first }}.edxapp"
    state: link
  with_items:
    - '{{ edxapp_venv_bin }}/python'
    - '{{ edxapp_venv_bin }}/pip'
    - '{{ edxapp_venv_bin }}/django-admin.py'
    - '{{ edxapp_code_dir }}/manage.py'
  tags:
    - install
    - install:configuration

- name: remove read-only ssh key
  file:
    path: "{{ edxapp_git_identity }}"
    state: absent
  when: EDXAPP_USE_GIT_IDENTITY
  tags:
    - install
    - install:configuration
    - install:code

- include: tag_ec2.yml tags=deploy
  when: COMMON_TAG_EC2_INSTANCE
  tags:
    - remove
    - aws

- set_fact:
    edxapp_installed: true

- name: restart edxapp
  supervisorctl:
    name: "edxapp:"
    supervisorctl_path: "{{ supervisor_ctl }}"
    config: "{{ supervisor_cfg }}"
    state: restarted
  when: edxapp_installed is defined and celery_worker is not defined and not disable_edx_services
  become_user: "{{ supervisor_service_user }}"
  tags:
    - manage

- name: restart edxapp_workers
  supervisorctl:
    name: "edxapp_worker:"
    supervisorctl_path: "{{ supervisor_ctl }}"
    config: "{{ supervisor_cfg }}"
    state: restarted
  when: edxapp_installed is defined and celery_worker is defined and not disable_edx_services
  become_user: "{{ common_web_user }}"
  tags:
    - manage