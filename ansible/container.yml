version: "1"
#defaults:

services:
 db:
  image: mysql:5.7
  volumes: 
   - "{{DOCKER_DATA_ROOT}}/mysql/data:/var/lib/mysql"
  environment:
   MYSQL_ROOT_PASSWORD: "{{ COMMON_MYSQL_MIGRATE_PASS }}"
   MYSQL_DATABASE: "{{ EDXAPP_MYSQL_DB_NAME }}"
   MYSQL_USER: "{{ EDXAPP_MYSQL_USER }}"
   MYSQL_PASSWORD: "{{ EDXAPP_MYSQL_PASSWORD }}"
  
 mongo:
  image: mongo:3.4
  command: /entrypoint.sh mongod --auth
  volumes:
   - "{{DOCKER_DATA_ROOT}}/mongo/data:/data/db"

 #mongoConfig:
#  image: mongo:3.3
#  links:
#   - mongo:mongo
#  command: /bin/false

# Need to build our own for ES 0.9
 es:
  image: ubuntu:xenial # opensaas/edx-elasticsearch
  command: ["/usr/share/elasticsearch/bin/elasticsearch","-f"]
  volumes:
   - "{{DOCKER_DATA_ROOT}}/elasticsearch/data:/data"


 memcache:
  image: memcached:1.4.24
  volumes:
   - "{{DOCKER_DATA_ROOT}}/memcache/data:/data"


 nginx:
  image: nginx
  links:
   - lms:lms
   - cms:cms
#   - xqueue:xqueue
   - insights:insights
   - analytics:analytics
  volumes:
   - "{{DOCKER_DATA_ROOT}}:/edx/var"
  command: |
    /bin/bash -c "nginx -g 'daemon off;'"
  ports:
   - 6080:80
   - 6443:443
   - 18000:18000
   - 18010:18010
   - 18020:18020
   - 18040:18040
   - 18100:18100
   - 18110:18110


 rabbitmq:
  image: rabbitmq:3.5.3
  volumes:
   - "{{DOCKER_DATA_ROOT}}/rabbitmq/data:/var/lib/rabbitmq"
  environment:
    RABBITMQ_DEFAULT_USER: "{{ EDXAPP_CELERY_USER }}"
    RABBITMQ_DEFAULT_PASS: "{{ EDXAPP_CELERY_PASSWORD }}"

 forums:
  image: ubuntu:xenial #opensaas/edx-forums
  links:
   - db:db
#   - xqueue:xqueue
   - memcache:memcache
   - mongo:mongo
   - es:es
   - rabbitmq:rabbitmq
  command: ["/edx/app/supervisor/venvs/supervisor/bin/supervisord", "-n", "--configuration", "/edx/app/supervisor/supervisord.conf"]
  volumes:
   - "{{DOCKER_EDX_ROOT}}/cs_comments_service:/edx/app/forum/cs_comments_service"

   
# xqueue:
#  image: ubuntu:xenial #opensaas/edx-xqueue
#  links:
#   - db:db
#   - memcache:memcache
#   - mongo:mongo
#   - es:es
#   - rabbitmq:rabbitmq
#  command: ["/edx/app/supervisor/venvs/supervisor/bin/supervisord", "-n", "--configuration", "/edx/app/supervisor/supervisord.conf"]
#  volumes:
#   - "{{DOCKER_EDX_ROOT}}/xqueue:/edx/app/edxapp/xqueue"
#   - /dev/log:/dev/log


 lms:
  image: ubuntu:xenial #opensaas/edxapp:trusty-v3
  links:
   - db:db
   - forums:forums
#   - xqueue:xqueue
   - memcache:memcache
   - mongo:mongo
   - es:es
   - rabbitmq:rabbitmq
  command: ["/edx/app/supervisor/venvs/supervisor/bin/supervisord", "-n", "--configuration", "/edx/app/supervisor/supervisord.conf"]
  volumes:
   - "{{DOCKER_EDX_ROOT}}/edx-platform:/edx/app/edxapp/edx-platform"
   - /dev/log:/dev/log
   - "{{DOCKER_DATA_ROOT}}/edxapp:/edx/var/edxapp"

 cms:
  image: ubuntu:xenial #opensaas/edxapp:trusty-v3
  links:
   - db:db
   - forums:forums
#   - xqueue:xqueue
   - memcache:memcache
   - mongo:mongo
   - es:es
   - rabbitmq:rabbitmq
  command: ["/edx/app/supervisor/venvs/supervisor/bin/supervisord", "-n", "--configuration", "/edx/app/supervisor/supervisord.conf"]
  volumes:
   - "{{DOCKER_EDX_ROOT}}/edx-platform:/edx/app/edxapp/edx-platform"
   - /dev/log:/dev/log
   - "{{DOCKER_DATA_ROOT}}/edxapp:/edx/var/edxapp"

 edxworker:
  image: ubuntu:xenial #opensaas/edxapp:trusty-v3
  links:
   - db:db
   - forums:forums
#   - xqueue:xqueue
   - memcache:memcache
   - mongo:mongo
   - es:es
   - rabbitmq:rabbitmq
  command: ["/edx/app/supervisor/venvs/supervisor/bin/supervisord", "-n", "--configuration", "/edx/app/supervisor/supervisord.conf"]
  volumes:
   - "{{DOCKER_EDX_ROOT}}/edx-platform:/edx/app/edxapp/edx-platform"
   - /dev/log:/dev/log            
   
   
 analytics:
  image: ubuntu:xenial #edxops/trusty-common:v3
  links:
   - db:db
   - forums:forums
#   - xqueue:xqueue
   - memcache:memcache
   - mongo:mongo
   - es:es
   - rabbitmq:rabbitmq
   - insights:insights
  command: ["/edx/app/supervisor/venvs/supervisor/bin/supervisord", "-n", "--configuration", "/edx/app/supervisor/supervisord.conf"]
  volumes:
   - "{{DOCKER_EDX_ROOT}}/analytics_api:/edx/app/analytics_api"
   - /dev/log:/dev/log
   
 edxconfig:
  image: ubuntu:xenial #edxops/trusty-common:v3
  links:
   - db:db
   - forums:forums
 #  - xqueue:xqueue
   - memcache:memcache
   - mongo:mongo
   - es:es
  command: /bin/false
  
 insights:
  image: ubuntu:xenial #opensaas/edx-insights
  links:
   - db:db
   - forums:forums
#   - xqueue:xqueue
   - memcache:memcache
   - mongo:mongo
   - es:es
   - rabbitmq:rabbitmq
  command: ["/edx/app/supervisor/venvs/supervisor/bin/supervisord", "-n", "--configuration", "/edx/app/supervisor/supervisord.conf"]
  volumes:
   - "{{DOCKER_EDX_ROOT}}/insights:/edx/app/insights"
   - /dev/log:/dev/log
   - "{{DOCKER_DATA_ROOT}}/insights:/edx/var/insights"
   
 analytics_pipeline:
  image: ubuntu:xenial #edxops/trusty-common:v3
  links:
   - db:db
   - forums:forums
#   - xqueue:xqueue
   - memcache:memcache
   - mongo:mongo
   - es:es
   - rabbitmq:rabbitmq
   - insights:insights
  command: |
    /bin/bash -c "/edx/app/hadoop/hadoop/docker-startup.sh"
  volumes:
   - "{{DOCKER_EDX_ROOT}}/hadoop:/edx/app/hadoop"
   - "{{DOCKER_DATA_ROOT}}/analytics_pipline:/edx/etc/edx-analytics-pipeline"
   - "{{DOCKER_DATA_ROOT}}/hadoop:/edx/var/hadoop"
   
   
registries: {}
  # Add optional registries used for deployment. For example:
  #  google:
  #    url: https://gcr.io
  #    namespace: my-cool-project-xxxxxx   