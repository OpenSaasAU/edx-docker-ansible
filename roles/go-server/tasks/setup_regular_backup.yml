#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://github.com/edx/configuration/wiki
# code style: https://github.com/edx/configuration/wiki/Ansible-Coding-Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
#
#
# Task to setup a regular go-server backup via cron
#
# Overview:
#
# Uses cron to generate a regular go-server backup and send it to AWS S3.
# A successful backup and transfer is then reported to DeadMan'sSnitch.
#
# Example play:
#
# - name: Configure instance(s)
#   hosts: go-server
#   become: True
#   vars_files:
#     - "{{ secure_dir }}/admin/sandbox.yml"
#   gather_facts: True
#   roles:
#     - common
#

- name: install required pkgs
  apt:
    name: "{{ item }}"
    state: present
    update_cache: true
    cache_valid_time: 3600
  with_items: "{{ GO_SERVER_BACKUP_APT_PKGS }}"

- name: install required Python modules
  pip:
    name: "{{ item }}"
    state: present
  with_items: "{{ GO_SERVER_BACKUP_PIP_PKGS }}"

- name: create backup shell script
  template:
    src: gocd_backup.j2
    dest: "{{ GO_SERVER_BACKUP_CRON_SCRIPT_LOCATION }}"
    mode: 0700
    owner: root
    group: root

- name: create cron entry
  cron:
    name: "gocd backup"
    minute: 0
    hour: 3
    job: "{{ GO_SERVER_BACKUP_CRON_SCRIPT_LOCATION }} 2>&1 | /usr/bin/logger -t gocd_backup"
